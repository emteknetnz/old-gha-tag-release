name: Tag and release
description: GitHub Action to create a tag and an optional release
inputs:
  branch:
    type: string
    required: true
  tag:
    type: string
    required: true
  delete_existing:
    type: boolean
    required: false
    default: false
  release:
    type: boolean
    required: false
    default: false
  body:
    type: string
    required: false
    default: ''
runs:
  using: composite
  # Add string inputs to memory instead of using string substitution in shell script
  # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
  env:
    TAG: ${{ inputs.tag }}
    BRANCH: ${{ inputs.branch }}
  steps:
    - name: Generate sha
      id: generate_sha
      shell: bash
      run: |
        # It is assumed you haveve already run actions/checkout in the action/workflow that called this action
        SHA=$(git rev-parse $BRANCH)
        if ! [[ "$SHA" =~ ^[a-f0-9]{40}$ ]]; then echo "Invalid sha" && exit 1; fi
        echo "::set-output name=sha::${SHA}"

    - name: Delete existing tag if one exists
      if: ${{ inputs.delete_existing }}
      shell: bash
      run: |
        echo "Deleting old $TAG tag if it exists"
        curl -s \
        -X DELETE https://api.github.com/repos/${{ github.repository }}/git/refs/tags/$TAG \
        -H "Accept: application/vnd.github.v3+json" \
        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"

    - name: Create tag
      shell: bash
      run: |        
        SHA=${{ steps.generate_sha.outputs.sha }}             
        # Create new tag via GitHub API
        # https://docs.github.com/en/rest/reference/git#create-a-reference
        curl -s \
        -X POST https://api.github.com/repos/${{ github.repository }}/git/tags \
        -H "Accept: application/vnd.github.v3+json" \
        -H "Authorization: token ${{ github.token }}" \
        -d @- << EOF
        {
          "tag": "$TAG",
          "sha": "$SHA"
        }
        EOF
        echo "New tag $TAG created with sha $SHA"

    - name: Delete existing release if one exists
      if: ${{ inputs.release && inputs.delete_existing }}
      shell: bash
        echo "Deleting old release for $TAG if it exists"
        # Get id for an existing release matching $TAG
        curl -s \
        -X GET https://api.github.com/repos/silverstripe/silverstripe-framework/releases/tags/$TAG \
        -H "Accept: application/vnd.github.v3+json" > __.json
        RELEASE_ID=$(jq .id __.json)
        if [ "$RELEASE_ID" != "null" ]; then
          curl -s \
          -X DELETE https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"
          echo "Deleted existing release $RELEASE_ID for tag $TAG"
        else
          echo "Could not find an existing release for tag $TAG"
        fi

    - name: Create release
      if: ${{ inputs.release }}
      shell: bash
      run: |
        # Run git commit, push and create pull-request as 'github-actions' user
        
        # Create new pull-request via GitHub API
        # https://docs.github.com/en/rest/reference/releases#create-a-release
        curl -s \
        -X POST https://api.github.com/repos/${{ github.repository }}/releases \
        -H "Accept: application/vnd.github.v3+json" \
        -H "Authorization: token ${{ github.token }}" \
        -d @- << EOF
        {
          "tag_name": "$TAG",
          "name": "$TAG",
          "body": "$BODY",
        }
        EOF
        echo "New pull-request created"
